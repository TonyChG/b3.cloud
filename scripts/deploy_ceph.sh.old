#!/bin/bash
# =============================================================================
# Name     : deploy_ceph.sh
# Function :
# Usage    :
# vi       : set expandtab shiftwidth=4 softtabstop=4
# =============================================================================
# Date        Who      What
# 11/04/18    tonychg
# =============================================================================

master='192.168.4.101'
cidr_network='192.168.4.1/24'
ssh_key="$HOME/.vagrant.d/insecure_private_key"
disk_size="8"

hosts=(\
'192.168.4.101' \
'192.168.4.102' \
'192.168.4.103' \
'192.168.4.104' \
'192.168.4.105' \
)

managers=(\
'192.168.4.101' \
'192.168.4.102' \
'192.168.4.103' \
)

function fatal {
    if [[ $? -ne 0 ]]; then
        >&2 echo -e "$1"
        exit -1
    fi
}

function ssh_cmd {
    ssh -q -i $ssh_key -o "StrictHostKeyChecking=no" core@$1 "$2"
}

function revert {
    for h in ${hosts[@]}; do
        ssh_cmd $h "! [[ -z \$(docker ps -aq) ]] && docker rm -f \$(docker ps -aq)"
        ssh_cmd $h 'sudo rm -rf ceph.tar.gz /var/lib/ceph /etc/ceph'
    done
    exit 0
}

if [[ $1 == '--revert' ]]; then
    revert
fi

deploy_entity="all"

ssh_cmd $master "docker run -d \
    --net=host \
    --restart always \
    -v /etc/ceph:/etc/ceph \
    -v /var/lib/ceph/:/var/lib/ceph/ \
    -e MON_IP=$master \
    -e CEPH_PUBLIC_NETWORK=$cidr_network \
    --name='ceph-mon'\
    ceph/daemon mon"

fatal "Fail to init ceph root manager"

>/dev/null 2>&1 ssh_cmd $master "stat /etc/ceph/ceph.mon.keyring"
while [[ $? -ne 0 ]]; do
    echo "Wait starting of the master ..." ; sleep 1
    >/dev/null 2>&1 ssh_cmd $master "stat /etc/ceph/ceph.mon.keyring"
done

ssh_cmd $master "sudo tar cPfz ceph.tar.gz /etc/ceph"
scp -q -i $ssh_key -o 'StrictHostKeyChecking=no' core@$master:ceph.tar.gz /tmp/ceph.tar.gz

exclude_master=("${hosts[@]:1}")

for h in "${exclude_master[@]}"; do
    scp -q -i $ssh_key -o 'StrictHostKeyChecking=no' /tmp/ceph.tar.gz core@$h:
    ssh_cmd $h "sudo tar xPfz ceph.tar.gz -C /"
    echo -e "Copy /etc/ceph to $h"
done

exclude_master=("${managers[@]:1}")

for h in "${exclude_master[@]}"; do
    echo "Add $h to cluster as monitor"
    ssh_cmd $h "docker run -d \
        --net=host \
        --restart always \
        -v /etc/ceph:/etc/ceph \
        -v /var/lib/ceph/:/var/lib/ceph/ \
        -e MON_IP=$h \
        -e CEPH_PUBLIC_NETWORK=$cidr_network \
        --name='ceph-mon' \
        ceph/daemon mon"
done

for h in "${managers[@]}"; do
    echo "Add $h to cluster as manager"
    ssh_cmd $h "docker run -d \
        --net=host \
        --privileged=true \
        --pid=host \
        -v /etc/ceph:/etc/ceph \
        -v /var/lib/ceph/:/var/lib/ceph/ \
        --name='ceph-mgr' \
        --restart=always \
        ceph/daemon mgr"
done

ssh_cmd $master "docker exec ceph-mon ceph auth get client.bootstrap-osd" > /tmp/ceph.keyring
for h in "${hosts[@]}"; do
    scp -q -i $ssh_key -o "StrictHostKeyChecking=no" /tmp/ceph.keyring core@$h:ceph.keyring 
    ssh_cmd $h "sudo mkdir -p /var/lib/ceph/bootstrap-osd && \
        sudo mv -v ceph.keyring /var/lib/ceph/bootstrap-osd/ceph.keyring"
    echo "Copy ceph.keyring to $h"
    shared_disk=$(\
        ssh_cmd $h "sudo /usr/sbin/fdisk -l \
        | grep '$disk_size GiB' | awk -F: '{print \$1}' \
        | sed -e 's#Disk ##g'"
    )
    ssh_cmd $h "docker run -d \
        --net=host \
        --privileged=true \
        --pid=host \
        -v /etc/ceph:/etc/ceph \
        -v /var/lib/ceph/:/var/lib/ceph/ \
        -v /dev/:/dev/ \
        -e OSD_FORCE_ZAP=1 \
        -e OSD_DEVICE='$shared_disk' \
        -e OSD_TYPE=disk \
        --name='ceph-osd' \
        --restart=always \
        ceph/daemon osd_ceph_disk"
    echo "Start OSD on $h"
done

for h in "${hosts[@]}"; do
    ssh_cmd $h "docker run -d \
        --net=host \
        --name ceph-mds \
        --restart always \
        -v /var/lib/ceph/:/var/lib/ceph/ \
        -v /etc/ceph:/etc/ceph \
        -e CEPHFS_CREATE=1 \
        -e CEPHFS_DATA_POOL_PG=128 \
        -e CEPHFS_METADATA_POOL_PG=256 \
        ceph/daemon mds"
    echo "Start MDS on $h"
done

ssh_cmd $master "docker exec ceph-mon ceph osd pool set cephfs_data size 2"
# ssh_cmd $master "docker exec ceph-mon ceph osd pool set cephfs_metadata size 2"
ssh_cmd $master "docker exec ceph-mon ceph osd set nodeep-scrub"

# Connect to master to generate token
token=$(\
    ssh_cmd $master "docker exec ceph-mon \
    ceph auth get-or-create client.dockerswarm osd 'allow rw' mon 'allow r' mds 'allow'\
    | grep 'key' \
    | sed -e 's#\tkey \= ##g'")

echo "Generate new token for all nodes: $token"
for h in "${hosts[@]}"; do
    echo "Configure disk on $h"
    manager_ips=$(echo -n "${managers[@]}" | sed -e 's# #,#g')
    ssh_cmd $h "sudo su -c\
'echo \"$manager_ips:6789/\t/data/\tceph\tname=dockerswarm,secret=$token,noatime,_netdev 0 2\" > /etc/fstab'"
    echo "Push disk config to fstab"
    ssh_cmd $h "sudo mkdir -p /data"
    echo "Mounting ..."
    ssh_cmd $h "sudo mount -a"
done
